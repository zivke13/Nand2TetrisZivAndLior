CHIP Mux8 {
    IN a, b, c, d, e, f, g, h, sel[3];
    OUT out;

    PARTS:
    Not(in=sel[0], out=x);
	Not(in=sel[1], out=y);
	Not(in=sel[2], out=z);
	
	And(a=x, b=y, out=a1);
	And(a=z, b=a, out=a2);
	And(a=a1, b=a2, out=o0);
	
	And(a=sel[0], b=y, out=b1);
	And(a=z, b=b, out=b2);
	And(a=b1, b=b2, out=o1);
	
	And(a=x, b=sel[1], out=c1);
	And(a=z, b=c, out=c2);
	And(a=c1, b=c2, out=o2);
	
	And(a=sel[0], b=sel[1], out=d1);
	And(a=z, b=d, out=d2);
	And(a=d1, b=d2, out=o3);
	
	And(a=x, b=y, out=e1);
	And(a=sel[2], b=e, out=e2);
	And(a=e1, b=e2, out=o4);
	
	And(a=sel[0], b=y, out=f1);
	And(a=sel[2], b=f, out=f2);
	And(a=f1, b=f2, out=o5);
	
	And(a=x, b=sel[1], out=g1);
	And(a=sel[2], b=g, out=g2);
	And(a=g1, b=g2, out=o6);
	
	And(a=sel[0], b=sel[1], out=h1);
	And(a=sel[2], b=h, out=h2);
	And(a=h1, b=h2, out=o7);
	
	Or(a=o0, b=o1, out=sf1);
	Or(a=o2, b=o3, out=sf2);
	Or(a=o4, b=o5, out=sf3);
	Or(a=o6, b=o7, out=sf4);
	Or(a=sf1, b=sf2, out=fn1);
	Or(a=sf3, b=sf4, out=fn2);
	Or(a=fn1, b=fn2, out=out);
}